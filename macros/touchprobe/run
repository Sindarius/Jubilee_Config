; A rough G10 nozzle offset from the z probe position for fixed machine point should be set so nozzle can contact probe.

if !exists(param.S)
    abort "Missing S Param"

T{param.S} ;Set tool to param

echo "Starting probe"
M98 P"0:/sys/set_touchprobe_slow.g" ;Slow for Z probing
G90 ; Absolute Position
G0 Z5
G0 Y150 ;Safe move Y
G0 X150 ; Safe move X

var top = 2; how far above probe to lift
var dive = 2.5 ; sets the dive based on top. top - dive is how far nozzle will go down.

G91 ; Relative movement

G30 S-1 ;Probe Z
var zHeight = move.axes[2].machinePosition * -1
G0 Z{var.top} ; Fixed top value

M98 P"0:/sys/set_touchprobe.g" ;Faster for XY probing

;Probe to right
G0 X-10; Move left 15mm -- Give ourselves a little extra space
G0 Z{-var.dive}; Move down 1.2mm to get tip of nozzle in contact
G38.2 X250 ; Probe to right until stop
var mRight = move.axes[0].machinePosition; 
var right = move.axes[0].userPosition;
;echo "Right " ^ var.right
G0 X-1
G0 Z{var.dive} ; Lift

;Probe to left 

G0 X12; move right
G0 Z{-var.dive} ; Move down
G38.2 X100 ;Probe to the left until contact 
var mLeft = move.axes[0].machinePosition
var left = move.axes[0].userPosition
;echo "Left " ^ var.left
G0 X1
G0 Z{var.dive} ; Lift

G90
G0 X{((var.right+var.left) / 2)} ; Go to center x position
;echo move.axes[0].userPosition 

;Get front position

G91 ;Back to relative
G0 Y-10    ; move toward front
G0 Z{-var.dive}   ; Lower nozzle
G38.2 Y250 ; probe 
var mFront = move.axes[1].machinePosition ; Record position 
var front = move.axes[1].userPosition ; Record position 
;echo "Front" ^ var.front
G0 Y-1
G0 Z{var.dive} ; Lift


;Get back position
G0 Y12   ;Move back
G0 Z{-var.dive} ; Lower nozzle
G38.2 Y100 ; Probe
var mBack = move.axes[1].machinePosition ; Record position 
var back = move.axes[1].userPosition ;Record Position
;echo "Back" ^ var.back
G0 Y1
G0 Z{var.dive} ;Lift at end


G90 ; Back to absolute
G0 Y{((var.front + var.back) / 2)}

G30 S-1 ;Probe Z
set var.zHeight = move.axes[2].machinePosition * -1

M400 ; wait for all the moves to complete.
G4 S1

echo "Position " ^ move.axes[0].userPosition ^ "," ^ move.axes[1].userPosition 
echo "machinePos" ^ move.axes[0].machinePosition ^ "," ^ move.axes[1].machinePosition
echo "Offset " ^ (global.probex - move.axes[0].machinePosition) ^ ", " ^ (global.probey - move.axes[1].machinePosition)

G10 P{param.S} X{global.probex - move.axes[0].machinePosition} Y{global.probey - move.axes[1].machinePosition} Z{var.zHeight}
M500
